# openapi: 3.0.0
# info:
#   title: Habit Tracker API
#   description: API for a Habit Tracker
#   version: 1.0.0

# paths:
#   /projects:
#     get:
#       $ref: "./endpoints/projects.yaml#/getAllProjects"

#     post:
#       $ref: "./endpoints/projects.yaml#/createProject"

#   /projects/{projectId}:
#     delete:
#       $ref: "./endpoints/projects.yaml#/deleteProject"

#   /projects/{projectId}/tasks:
#     get:
#       $ref: "./endpoints/projects.yaml#/getAllTasks"

#     post:
#       $ref: "./endpoints/projects.yaml#/createTask"

#   /projects/{projectId}/tasks/{taskId}:
#     delete:
#       $ref: "./endpoints/projects.yaml#/deleteTask"

openapi: 3.0.0
info:
  title: Habit Tracker API
  description: API for tracking habits and tasks
  version: 1.0.0

tags:
  - name: Projects
    description: Operations with habit projects
  - name: Tasks
    description: Operations with habit tasks

paths:
  /projects:
    get:
      tags: [Projects]
      summary: Get all projects
      description: Returns a list of all habit projects
      operationId: getAllProjects
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags: [Projects]
      summary: Create new project
      description: Create a new habit tracking project
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        description: Project data to create
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{projectId}:
    delete:
      tags: [Projects]
      summary: Delete project
      description: Delete a project and all its tasks
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '204':
          description: Project deleted
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{projectId}/tasks:
    get:
      tags: [Tasks]
      summary: Get project tasks
      description: Get all tasks for a specific project
      operationId: getProjectTasks
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags: [Tasks]
      summary: Create task
      description: Create a new task in a project
      operationId: createTask
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        description: Task data to create
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{projectId}/tasks/{taskId}:
    delete:
      tags: [Tasks]
      summary: Delete task
      description: Delete a specific task from a project
      operationId: deleteTask
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/TaskId'
      responses:
        '204':
          description: Task deleted
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Project:
      type: object
      required: [id, name, createdAt, updatedAt]
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "Morning Routine"
          minLength: 1
          maxLength: 100
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProjectCreate:
      type: object
      required: [name]
      properties:
        name:
          type: string
          example: "New Project"
          minLength: 1
          maxLength: 100

    Task:
      type: object
      required: [id, projectId, title, completed, createdAt, updatedAt]
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
        projectId:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "Drink water"
          minLength: 1
          maxLength: 255
        completed:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TaskCreate:
      type: object
      required: [title]
      properties:
        title:
          type: string
          example: "New Task"
          minLength: 1
          maxLength: 255
        completed:
          type: boolean
          default: false

  parameters:
    ProjectId:
      name: projectId
      in: path
      description: ID of the project
      required: true
      schema:
        type: string
        format: uuid
    TaskId:
      name: taskId
      in: path
      description: ID of the task
      required: true
      schema:
        type: string
        format: uuid

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      required: [statusCode, message, error]
      properties:
        statusCode:
          type: integer
          example: 404
        message:
          type: string
          example: "Project not found"
        error:
          type: string
          example: "Not Found"
        details:
          type: array
          items:
            type: string
          example: ["Invalid project ID format"]
